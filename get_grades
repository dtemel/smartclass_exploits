#!/usr/bin/python3
import os
import argparse
import requests
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from colorama import init, Fore

load_dotenv()
init(autoreset=True)

API_URL = "https://smartclass.uaa.k12.tr/student/index.php"
DEFAULT_HEADERS = {
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; rv:91.0) Gecko/20100101 Firefox/91.0",
    "X-Requested-With": "XMLHttpRequest",
}


def main():
    parser = argparse.ArgumentParser(description="Get the grades of a student")
    parser.add_argument("aid", help="TC Kimlik No of the student")
    parser.add_argument("--season")
    args = parser.parse_args()

    if args.season:
        season = args.season
    else:
        season = "sev_2021_2022"

    r = requests.get(
        API_URL,
        params={
            "op": "gradings",
            "action": "getSeasonGradings",
            "seasonId": "1",
            "database": season,
            "studentAid": args.aid,
        },
        cookies={
            "lang": "english",
            "admin": os.getenv("TOKEN"),
            "campusID": "0",
            "bigbluebutton": "1",
            "eokul": "1",
            "link": "1",
            "userFolder": "student",
            "branchID": "1",
            "seasonID": season,
        },
        headers=DEFAULT_HEADERS,
    )

    soup = BeautifulSoup(r.content, "html.parser")
    subjects = soup.find(id="simsDivGradingBatches").find_all("div", recursive=False)[
        1:
    ]
    for subject in subjects:
        divs = subject.find_all("div", recursive=False)

        name = (
            divs[0]
            .select("h4:nth-child(1) > a:nth-child(1) > div:nth-child(1)")[0]
            .decode_contents()[27:]
            .rstrip()
        )

        print(Fore.WHITE + name)

        grade_rows = divs[1].find("table").find("tbody").find_all("tr")[1:]

        for row in grade_rows:
            cols = row.find_all("td")
            eval_kind, grade = (
                cols[0].decode_contents()[29:].rstrip(),
                cols[1].decode_contents().strip(),
            )

            if not grade:
                grade = "-"

            print(eval_kind, grade)

        print()


if __name__ == "__main__":
    main()
